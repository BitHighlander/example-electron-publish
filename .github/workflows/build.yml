name: Build

on:
  push:
    branches: [master]
    paths-ignore:
      - "**.md"
      - "**.spec.js"
      - ".idea"
      - ".vscode"
      - ".dockerignore"
      - "Dockerfile"
      - ".gitignore"
      - ".github/**"
      - "!.github/workflows/build.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitHub CLI
        run: |
          if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
            sudo apt install gh -y
          elif [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            brew install gh
          else
            choco install gh
        shell: bash

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release (if not exists)
        run: |
          gh release view v1.0.0 || gh release create v1.0.0 --title "Release v1.0.0" --notes "Release notes for version 1.0.0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact to Release
        run: gh release upload v1.0.0 release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Upload
        run: gh release view v1.0.0 --json assets --jq '.assets[] | {name: .name, download_url: .url}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
